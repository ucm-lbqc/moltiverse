<%- colvars.each do |cv| -%>
colvar {
  name <%= cv.component.name.underscore %>
  width <%= bin_width %> 
  lowerWall <%= cv.lower_bound %>
  lowerboundary <%= cv.lower_bound %>
  upperWall <%= cv.upper_bound %>
  upperboundary <%= cv.upper_bound %>

  lowerwallconstant <%= cv.force_constant %>
  upperwallconstant <%= cv.force_constant %>

  extendedLagrangian on
  extendedFluctuation <%= bin_width %> 

  <%= cv.component.keyword %> {
    atoms {
      atomsFile <%= pdb_reference %>
      atomsCol B
      atomsColValue 1.0
    }
    <%- if cv.is_a? Colvar::RMSD -%>
      refpositionsfile  <%= pdb_reference %>
    <%- end -%>
  }
}
<%- end -%>

abf {
  colvars              <%= colvars.join(" ", &.component.name.underscore) %>
  FullSamples          <%= fullsamples %>
  historyfreq          20000
  writeCZARwindowFile
}

<%- if wtm -%>
metadynamics {
  colvars            <%= colvars.join(" ", &.component.name.underscore) %>
  hillWeight         0.5
  hillWidth          1.0
  #wellTempered       on
  newHillFrequency   100
  #biasTemperature    1490
}
<%- end -%>

# To avoid ligand translation
colvar { 
  name translation 
  distance { 
    group1 { 
      atomsFile <%= pdb_reference %>
      atomsCol B
      atomsColValue 1.0 
    } 
    group2 { 
      dummyAtom (<%= lig_center_x %>, <%= lig_center_y %>, <%= lig_center_z %>)
    } 
  } 
} 
harmonic { 
  colvars translation 
  centers 0.0 
  forceConstant 100.0 
} 

<%- if wtm && colvars.size > 1 -%>
## To keep orientation
colvar { 
  name orientation 
  orientation { 
    atoms { 
      atomsFile   <%= pdb_reference %>
      atomsCol B
      atomsColValue 1.0 
    } 
    refPositionsFile   <%= pdb_reference %>
  } 
} 
harmonic { 
  colvars orientation 
  centers (1.0, 0.0, 0.0, 0.0)
  forceConstant 100.0 
}
<%- end -%>
